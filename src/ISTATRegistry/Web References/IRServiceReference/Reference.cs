//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.18063
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Il codice sorgente è stato generato automaticamente da Microsoft.VSDesigner, versione 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace ISTATRegistry.IRServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IRServiceSoap", Namespace="http://tempuri.org/")]
    public partial class IRService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserByCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanAgenciesRelationForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserAgenciesRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCodesIdByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckIfUserExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCodelistIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDsdCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDsdCodeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLocalizedStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOrderAnnotationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IRService() {
            this.Url = global::ISTATRegistry.Properties.Settings.Default.ISTATRegistry_IRServiceReference_IRService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserByCredentialsCompletedEventHandler GetUserByCredentialsCompleted;
        
        /// <remarks/>
        public event CleanAgenciesRelationForUserCompletedEventHandler CleanAgenciesRelationForUserCompleted;
        
        /// <remarks/>
        public event CreateUserAgenciesRelationCompletedEventHandler CreateUserAgenciesRelationCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event InsertUserCompletedEventHandler InsertUserCompleted;
        
        /// <remarks/>
        public event GetCodesIdByUserCompletedEventHandler GetCodesIdByUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event GetUserByIdCompletedEventHandler GetUserByIdCompleted;
        
        /// <remarks/>
        public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;
        
        /// <remarks/>
        public event CheckIfUserExistsCompletedEventHandler CheckIfUserExistsCompleted;
        
        /// <remarks/>
        public event GetCodelistIdCompletedEventHandler GetCodelistIdCompleted;
        
        /// <remarks/>
        public event InsertDsdCodeCompletedEventHandler InsertDsdCodeCompleted;
        
        /// <remarks/>
        public event GetDsdCodeIdCompletedEventHandler GetDsdCodeIdCompleted;
        
        /// <remarks/>
        public event InsertLocalizedStringCompletedEventHandler InsertLocalizedStringCompleted;
        
        /// <remarks/>
        public event InsertOrderAnnotationCompletedEventHandler InsertOrderAnnotationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByCredentials", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUserByCredentials(string username, string password) {
            object[] results = this.Invoke("GetUserByCredentials", new object[] {
                        username,
                        password});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByCredentialsAsync(string username, string password) {
            this.GetUserByCredentialsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetUserByCredentialsAsync(string username, string password, object userState) {
            if ((this.GetUserByCredentialsOperationCompleted == null)) {
                this.GetUserByCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByCredentialsOperationCompleted);
            }
            this.InvokeAsync("GetUserByCredentials", new object[] {
                        username,
                        password}, this.GetUserByCredentialsOperationCompleted, userState);
        }
        
        private void OnGetUserByCredentialsOperationCompleted(object arg) {
            if ((this.GetUserByCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByCredentialsCompleted(this, new GetUserByCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CleanAgenciesRelationForUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CleanAgenciesRelationForUser(int userId) {
            object[] results = this.Invoke("CleanAgenciesRelationForUser", new object[] {
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CleanAgenciesRelationForUserAsync(int userId) {
            this.CleanAgenciesRelationForUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void CleanAgenciesRelationForUserAsync(int userId, object userState) {
            if ((this.CleanAgenciesRelationForUserOperationCompleted == null)) {
                this.CleanAgenciesRelationForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanAgenciesRelationForUserOperationCompleted);
            }
            this.InvokeAsync("CleanAgenciesRelationForUser", new object[] {
                        userId}, this.CleanAgenciesRelationForUserOperationCompleted, userState);
        }
        
        private void OnCleanAgenciesRelationForUserOperationCompleted(object arg) {
            if ((this.CleanAgenciesRelationForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanAgenciesRelationForUserCompleted(this, new CleanAgenciesRelationForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUserAgenciesRelation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateUserAgenciesRelation(int userId, string agencySchemeId, string agencySchemeAgencyId, string agencySchemeVersion, string agency) {
            object[] results = this.Invoke("CreateUserAgenciesRelation", new object[] {
                        userId,
                        agencySchemeId,
                        agencySchemeAgencyId,
                        agencySchemeVersion,
                        agency});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAgenciesRelationAsync(int userId, string agencySchemeId, string agencySchemeAgencyId, string agencySchemeVersion, string agency) {
            this.CreateUserAgenciesRelationAsync(userId, agencySchemeId, agencySchemeAgencyId, agencySchemeVersion, agency, null);
        }
        
        /// <remarks/>
        public void CreateUserAgenciesRelationAsync(int userId, string agencySchemeId, string agencySchemeAgencyId, string agencySchemeVersion, string agency, object userState) {
            if ((this.CreateUserAgenciesRelationOperationCompleted == null)) {
                this.CreateUserAgenciesRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserAgenciesRelationOperationCompleted);
            }
            this.InvokeAsync("CreateUserAgenciesRelation", new object[] {
                        userId,
                        agencySchemeId,
                        agencySchemeAgencyId,
                        agencySchemeVersion,
                        agency}, this.CreateUserAgenciesRelationOperationCompleted, userState);
        }
        
        private void OnCreateUserAgenciesRelationOperationCompleted(object arg) {
            if ((this.CreateUserAgenciesRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserAgenciesRelationCompleted(this, new CreateUserAgenciesRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUser(int userId) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int userId) {
            this.DeleteUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int userId, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        userId}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertUser(string username, string password, string name, string surname, bool admin) {
            object[] results = this.Invoke("InsertUser", new object[] {
                        username,
                        password,
                        name,
                        surname,
                        admin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUserAsync(string username, string password, string name, string surname, bool admin) {
            this.InsertUserAsync(username, password, name, surname, admin, null);
        }
        
        /// <remarks/>
        public void InsertUserAsync(string username, string password, string name, string surname, bool admin, object userState) {
            if ((this.InsertUserOperationCompleted == null)) {
                this.InsertUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserOperationCompleted);
            }
            this.InvokeAsync("InsertUser", new object[] {
                        username,
                        password,
                        name,
                        surname,
                        admin}, this.InsertUserOperationCompleted, userState);
        }
        
        private void OnInsertUserOperationCompleted(object arg) {
            if ((this.InsertUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserCompleted(this, new InsertUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCodesIdByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCodesIdByUser(int userId) {
            object[] results = this.Invoke("GetCodesIdByUser", new object[] {
                        userId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCodesIdByUserAsync(int userId) {
            this.GetCodesIdByUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetCodesIdByUserAsync(int userId, object userState) {
            if ((this.GetCodesIdByUserOperationCompleted == null)) {
                this.GetCodesIdByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCodesIdByUserOperationCompleted);
            }
            this.InvokeAsync("GetCodesIdByUser", new object[] {
                        userId}, this.GetCodesIdByUserOperationCompleted, userState);
        }
        
        private void OnGetCodesIdByUserOperationCompleted(object arg) {
            if ((this.GetCodesIdByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCodesIdByUserCompleted(this, new GetCodesIdByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUser(int id, string username, string password, string name, string surname, bool admin) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        id,
                        username,
                        password,
                        name,
                        surname,
                        admin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int id, string username, string password, string name, string surname, bool admin) {
            this.UpdateUserAsync(id, username, password, name, surname, admin, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int id, string username, string password, string name, string surname, bool admin, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        id,
                        username,
                        password,
                        name,
                        surname,
                        admin}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserById(int userId) {
            object[] results = this.Invoke("GetUserById", new object[] {
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(int userId) {
            this.GetUserByIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(int userId, object userState) {
            if ((this.GetUserByIdOperationCompleted == null)) {
                this.GetUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIdOperationCompleted);
            }
            this.InvokeAsync("GetUserById", new object[] {
                        userId}, this.GetUserByIdOperationCompleted, userState);
        }
        
        private void OnGetUserByIdOperationCompleted(object arg) {
            if ((this.GetUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIdCompleted(this, new GetUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllUsers() {
            object[] results = this.Invoke("GetAllUsers", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(object userState) {
            if ((this.GetAllUsersOperationCompleted == null)) {
                this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllUsers", new object[0], this.GetAllUsersOperationCompleted, userState);
        }
        
        private void OnGetAllUsersOperationCompleted(object arg) {
            if ((this.GetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckIfUserExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckIfUserExists(string username) {
            object[] results = this.Invoke("CheckIfUserExists", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckIfUserExistsAsync(string username) {
            this.CheckIfUserExistsAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckIfUserExistsAsync(string username, object userState) {
            if ((this.CheckIfUserExistsOperationCompleted == null)) {
                this.CheckIfUserExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckIfUserExistsOperationCompleted);
            }
            this.InvokeAsync("CheckIfUserExists", new object[] {
                        username}, this.CheckIfUserExistsOperationCompleted, userState);
        }
        
        private void OnCheckIfUserExistsOperationCompleted(object arg) {
            if ((this.CheckIfUserExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckIfUserExistsCompleted(this, new CheckIfUserExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCodelistId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetCodelistId(string id, string agency, bool version1IsPresent, int version1, bool version2IsPresent, int version2, bool version3IsPresent, int version3, ref int foundId) {
            object[] results = this.Invoke("GetCodelistId", new object[] {
                        id,
                        agency,
                        version1IsPresent,
                        version1,
                        version2IsPresent,
                        version2,
                        version3IsPresent,
                        version3,
                        foundId});
            foundId = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetCodelistIdAsync(string id, string agency, bool version1IsPresent, int version1, bool version2IsPresent, int version2, bool version3IsPresent, int version3, int foundId) {
            this.GetCodelistIdAsync(id, agency, version1IsPresent, version1, version2IsPresent, version2, version3IsPresent, version3, foundId, null);
        }
        
        /// <remarks/>
        public void GetCodelistIdAsync(string id, string agency, bool version1IsPresent, int version1, bool version2IsPresent, int version2, bool version3IsPresent, int version3, int foundId, object userState) {
            if ((this.GetCodelistIdOperationCompleted == null)) {
                this.GetCodelistIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCodelistIdOperationCompleted);
            }
            this.InvokeAsync("GetCodelistId", new object[] {
                        id,
                        agency,
                        version1IsPresent,
                        version1,
                        version2IsPresent,
                        version2,
                        version3IsPresent,
                        version3,
                        foundId}, this.GetCodelistIdOperationCompleted, userState);
        }
        
        private void OnGetCodelistIdOperationCompleted(object arg) {
            if ((this.GetCodelistIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCodelistIdCompleted(this, new GetCodelistIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDsdCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertDsdCode(string id, string codelistId, int parentCode, ref int insertedId) {
            object[] results = this.Invoke("InsertDsdCode", new object[] {
                        id,
                        codelistId,
                        parentCode,
                        insertedId});
            insertedId = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDsdCodeAsync(string id, string codelistId, int parentCode, int insertedId) {
            this.InsertDsdCodeAsync(id, codelistId, parentCode, insertedId, null);
        }
        
        /// <remarks/>
        public void InsertDsdCodeAsync(string id, string codelistId, int parentCode, int insertedId, object userState) {
            if ((this.InsertDsdCodeOperationCompleted == null)) {
                this.InsertDsdCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDsdCodeOperationCompleted);
            }
            this.InvokeAsync("InsertDsdCode", new object[] {
                        id,
                        codelistId,
                        parentCode,
                        insertedId}, this.InsertDsdCodeOperationCompleted, userState);
        }
        
        private void OnInsertDsdCodeOperationCompleted(object arg) {
            if ((this.InsertDsdCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDsdCodeCompleted(this, new InsertDsdCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDsdCodeId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDsdCodeId(int codelistId, string codeId, ref int foundId) {
            object[] results = this.Invoke("GetDsdCodeId", new object[] {
                        codelistId,
                        codeId,
                        foundId});
            foundId = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDsdCodeIdAsync(int codelistId, string codeId, int foundId) {
            this.GetDsdCodeIdAsync(codelistId, codeId, foundId, null);
        }
        
        /// <remarks/>
        public void GetDsdCodeIdAsync(int codelistId, string codeId, int foundId, object userState) {
            if ((this.GetDsdCodeIdOperationCompleted == null)) {
                this.GetDsdCodeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDsdCodeIdOperationCompleted);
            }
            this.InvokeAsync("GetDsdCodeId", new object[] {
                        codelistId,
                        codeId,
                        foundId}, this.GetDsdCodeIdOperationCompleted, userState);
        }
        
        private void OnGetDsdCodeIdOperationCompleted(object arg) {
            if ((this.GetDsdCodeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDsdCodeIdCompleted(this, new GetDsdCodeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLocalizedString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertLocalizedString(int itemId, string text, string type, string language, ref int foundId) {
            object[] results = this.Invoke("InsertLocalizedString", new object[] {
                        itemId,
                        text,
                        type,
                        language,
                        foundId});
            foundId = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLocalizedStringAsync(int itemId, string text, string type, string language, int foundId) {
            this.InsertLocalizedStringAsync(itemId, text, type, language, foundId, null);
        }
        
        /// <remarks/>
        public void InsertLocalizedStringAsync(int itemId, string text, string type, string language, int foundId, object userState) {
            if ((this.InsertLocalizedStringOperationCompleted == null)) {
                this.InsertLocalizedStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLocalizedStringOperationCompleted);
            }
            this.InvokeAsync("InsertLocalizedString", new object[] {
                        itemId,
                        text,
                        type,
                        language,
                        foundId}, this.InsertLocalizedStringOperationCompleted, userState);
        }
        
        private void OnInsertLocalizedStringOperationCompleted(object arg) {
            if ((this.InsertLocalizedStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLocalizedStringCompleted(this, new InsertLocalizedStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertOrderAnnotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertOrderAnnotation(int itemId, int order) {
            object[] results = this.Invoke("InsertOrderAnnotation", new object[] {
                        itemId,
                        order});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOrderAnnotationAsync(int itemId, int order) {
            this.InsertOrderAnnotationAsync(itemId, order, null);
        }
        
        /// <remarks/>
        public void InsertOrderAnnotationAsync(int itemId, int order, object userState) {
            if ((this.InsertOrderAnnotationOperationCompleted == null)) {
                this.InsertOrderAnnotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOrderAnnotationOperationCompleted);
            }
            this.InvokeAsync("InsertOrderAnnotation", new object[] {
                        itemId,
                        order}, this.InsertOrderAnnotationOperationCompleted, userState);
        }
        
        private void OnInsertOrderAnnotationOperationCompleted(object arg) {
            if ((this.InsertOrderAnnotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOrderAnnotationCompleted(this, new InsertOrderAnnotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User {
        
        private string idField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string nameField;
        
        private string surnameField;
        
        private UserAgency[] agenciesField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public UserAgency[] agencies {
            get {
                return this.agenciesField;
            }
            set {
                this.agenciesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserAgency {
        
        private string idField;
        
        private string langField;
        
        private string textField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string lang {
            get {
                return this.langField;
            }
            set {
                this.langField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserByCredentialsCompletedEventHandler(object sender, GetUserByCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CleanAgenciesRelationForUserCompletedEventHandler(object sender, CleanAgenciesRelationForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanAgenciesRelationForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanAgenciesRelationForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateUserAgenciesRelationCompletedEventHandler(object sender, CreateUserAgenciesRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserAgenciesRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserAgenciesRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertUserCompletedEventHandler(object sender, InsertUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCodesIdByUserCompletedEventHandler(object sender, GetCodesIdByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCodesIdByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCodesIdByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserByIdCompletedEventHandler(object sender, GetUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllUsersCompletedEventHandler(object sender, GetAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckIfUserExistsCompletedEventHandler(object sender, CheckIfUserExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckIfUserExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckIfUserExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCodelistIdCompletedEventHandler(object sender, GetCodelistIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCodelistIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCodelistIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int foundId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertDsdCodeCompletedEventHandler(object sender, InsertDsdCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDsdCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDsdCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int insertedId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDsdCodeIdCompletedEventHandler(object sender, GetDsdCodeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDsdCodeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDsdCodeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int foundId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertLocalizedStringCompletedEventHandler(object sender, InsertLocalizedStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLocalizedStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLocalizedStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int foundId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertOrderAnnotationCompletedEventHandler(object sender, InsertOrderAnnotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOrderAnnotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOrderAnnotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591